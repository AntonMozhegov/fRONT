export const lab_7 = `<h1>Лабораторная работа: Сравнение фронтенд-фреймворков</h1>

<p>Цель: Провести сравнительный анализ современных инструментов web-разработки: React, Vue.js, Angular и Svelte. Каждому пункту лабораторной соответствует вопрос, требующий развёрнутого письменного ответа на основе лекционного материала и личного анализа.</p>

<p><strong>1)</strong> В чём заключаются архитектурные различия между React и Svelte в контексте рендеринга и производительности?</p>
<p><strong>2)</strong> Почему отказ Svelte от виртуального DOM считается инновационным решением?</p>
<p><strong>3)</strong> Как Vue.js достигает высокой производительности с помощью своей реактивной системы?</p>
<p><strong>4)</strong> Какие особенности привязки данных в Angular влияют на производительность?</p>
<p><strong>5)</strong> Сравните принципы реактивности в Vue и хуков в React.</p>
<p><strong>6)</strong> Почему экосистема считается важной характеристикой фронтенд-фреймворка?</p>
<p><strong>7)</strong> Какие инструменты и библиотеки входят в экосистему React и как они расширяют его возможности?</p>
<p><strong>8)</strong> В чём проявляется зрелость и устойчивость экосистемы Angular?</p>
<p><strong>9)</strong> Как Vue.js упрощает вход в разработку по сравнению с Angular и React?</p>
<p><strong>10)</strong> Почему Svelte называют фреймворком с низким порогом вхождения и высокой скоростью прототипирования?</p>
<p><strong>11)</strong> Какие фреймворки подходят для проектов с ограниченными ресурсами (время, производительность устройств) и почему?</p>
<p><strong>12)</strong> Что делает Angular предпочтительным выбором для корпоративных приложений?</p>
<p><strong>13)</strong> Какие сложности могут возникнуть при масштабировании проектов на Svelte?</p>
<p><strong>14)</strong> Почему для крупных команд важна строгость и типизация Angular?</p>
<p><strong>15)</strong> Как зрелость сообщества React влияет на качество и надёжность решений?</p>
<p><strong>16)</strong> Какие преимущества предоставляет SvelteKit в экосистеме Svelte?</p>
<p><strong>17)</strong> Чем отличается подход к организации компонентов в Vue и React?</p>
<p><strong>18)</strong> Сравните стиль написания компонентов в Angular и Svelte.</p>
<p><strong>19)</strong> Как поддержка TypeScript влияет на развитие и устойчивость проекта?</p>
<p><strong>20)</strong> Какие фреймворки лучше подходят для быстрого старта небольшого проекта? Обоснуйте выбор.</p>
<p><strong>21)</strong> В чём заключается ключевое преимущество SSG и SSR, реализованных во фреймворках?</p>
<p><strong>22)</strong> Какие подходы к управлению состоянием предпочтительны в каждом фреймворке и почему?</p>
<p><strong>23)</strong> Как наличие официальных инструментов (CLI, DevTools) влияет на эффективность разработки?</p>
<p><strong>24)</strong> Приведите сценарии, в которых использование Vue предпочтительнее React, и наоборот.</p>
<p><strong>25)</strong> Какой фреймворк вы бы выбрали для старта нового проекта и почему? Аргументируйте на основе производительности, удобства и экосистемы.</p>
`;
